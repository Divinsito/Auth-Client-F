import axios from 'axios';
import Cookies from 'js-cookie';

const API_URL = '/api';
const AUTH_COOKIE_NAME = 'auth_token';

const api = axios.create({
Â  baseURL: API_URL,
Â  withCredentials: true,
Â  headers: {
Â  Â  'Content-Type': 'application/json',
Â  Â  'Accept': 'application/json',
Â  },
});

/** ðŸ”¹ Registrar Usuario */
export const registerUser = async (userData) => {
Â  try {
Â  Â  const response = await api.post('/register', userData);
Â  Â  return response.data;
Â  } catch (error) {
Â  Â  throw error.response ? error.response.data : error;
Â  }
};

/** ðŸ”¹ Iniciar SesiÃ³n */
export const loginUser = async (credentials) => {
Â  try {
Â  Â  const response = await api.post('/login', credentials);
Â  Â  const data = response.data;

Â  Â  if (data.token) {
Â  Â  Â  Cookies.set(AUTH_COOKIE_NAME, data.token, { expires: 7 });
Â  Â  }

Â  Â  return data;
Â  } catch (error) {
Â  Â  throw error.response ? error.response.data : error;
Â  }
};

/** ðŸ”¹ Cerrar SesiÃ³n */
export const logoutUser = async () => {
Â  try {
Â  Â  const token = Cookies.get(AUTH_COOKIE_NAME);
Â  Â  await api.delete('/logout', {
Â  Â  Â  headers: token ? { Authorization: `Bearer ${token}` } : {},
Â  Â  });
Â  } finally {
Â  Â  Cookies.remove(AUTH_COOKIE_NAME);
Â  }
};

// ðŸ”‘ Obtener Datos de Perfil (usando token y ruta /profile)
export const fetchUserProfile = async (token) => {
Â  Â  if (!token) {
Â  Â  Â  Â  throw new Error("Token no disponible para cargar el perfil.");
Â  Â  }
Â  Â  
Â  Â  try {
Â  Â  Â  Â  // Usa el endpoint '/profile'
Â  Â  Â  Â  const response = await api.get('/profile', {
Â  Â  Â  Â  Â  Â  headers: {
Â  Â  Â  Â  Â  Â  Â  Â  Authorization: `Bearer ${token}`, 
Â  Â  Â  Â  Â  Â  },
Â  Â  Â  Â  });
Â  Â  Â  Â  
Â  Â  Â  Â  return response.data; 
Â  Â  } catch (error) {
        // Usa axios.isAxiosError() para manejo de errores
Â  Â  Â  Â  if (axios.isAxiosError(error) && error.response) {
Â  Â  Â  Â  Â  Â  if (error.response.status === 401) {
Â  Â  Â  Â  Â  Â  Â  Â  throw new Error("Token invÃ¡lido o expirado. (401)");
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  if (error.response.status === 404) {
Â  Â  Â  Â  Â  Â  Â  Â  throw new Error("Endpoint /api/profile no encontrado (404).");
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  throw new Error(error.response.data.message || "Error al obtener perfil."); 
Â  Â  Â  Â  }

Â  Â  Â  Â  if (axios.isAxiosError(error) && error.code === 'ERR_NETWORK') {
Â  Â  Â  Â  Â  Â  throw new Error("Error de conexiÃ³n con el servidor API.");
Â  Â  Â  Â  }
        
Â  Â  Â  Â  throw new Error(error.message || "Error desconocido.");
Â  Â  }
};


export { api };